<UserControl x:Class="TXTReader.ToolPanel.ToolPanels"
             xmlns:zw="clr-namespace:Zlib.UI"               
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:converter="clr-namespace:TXTReader.Converter"
             mc:Ignorable="d" 
             xmlns:tool="clr-namespace:TXTReader.ToolPanel"
             d:DesignHeight="600" d:DesignWidth="300">
    <UserControl.Resources>
        <ResourceDictionary>
            <converter:ToolPanelWidthCvt x:Key="toolPanelWidthCvt"/>
            <converter:ToolPanelTargetLeftCvt x:Key="toolPanelTargetLeftCvt"/>
            <Storyboard x:Key="toolPanelShow">
                <DoubleAnimation Duration="0:0:0.2"
                    AccelerationRatio="0.33" DecelerationRatio="0.33"
                    Storyboard.TargetProperty="(Canvas.Left)">
                    <DoubleAnimation.To>
                        <MultiBinding Converter="{StaticResource toolPanelTargetLeftCvt}">
                            <Binding Path="ActualWidth" ElementName="toolPanel"/>
                            <Binding Path="ActualWidth" ElementName="canvas"/>
                        </MultiBinding>
                    </DoubleAnimation.To>
                </DoubleAnimation>
                <DoubleAnimation
                    To="1.0" Duration="0:0:0.2" 
                    Storyboard.TargetProperty="Opacity">
                </DoubleAnimation>
            </Storyboard>
            <Storyboard x:Key="toolPanelHide">
                <DoubleAnimation
                AccelerationRatio="0.33" DecelerationRatio="0.33"
                To="{Binding ActualWidth,ElementName=canvas}" Duration="0:0:0.2"                
                Storyboard.TargetProperty="(Canvas.Left)">
                </DoubleAnimation>
                <DoubleAnimation
                    To="0" Duration="0:0:0.2" 
                    Storyboard.TargetProperty="Opacity">
                </DoubleAnimation>
            </Storyboard>
            <ControlTemplate TargetType="{x:Type TabControl}" x:Key="tabtemplate">
                <Grid ClipToBounds="true" KeyboardNavigation.TabNavigation="Local" SnapsToDevicePixels="true">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition x:Name="ColumnDefinition0"/>
                        <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                        <RowDefinition x:Name="RowDefinition1" Height="*"/>
                    </Grid.RowDefinitions>
                    <UniformGrid
                      Rows="1"
                      x:Name="HeaderPanel"
                      Grid.Column="0"
                      Grid.Row="0"
                      Margin="0,0,0,0"
                      Panel.ZIndex="1"
                      IsItemsHost="true"
                      KeyboardNavigation.TabIndex="1"/>
                    <Border
                      x:Name="ContentPanel"
                      Grid.Column="0"
                      Grid.Row="1"
                      Background="{TemplateBinding Background}"
                      BorderBrush="{TemplateBinding BorderBrush}"
                      BorderThickness="{TemplateBinding BorderThickness}"
                      KeyboardNavigation.DirectionalNavigation="Contained"
                      KeyboardNavigation.TabIndex="2"
                      KeyboardNavigation.TabNavigation="Local">
                        <ContentPresenter
                        x:Name="PART_SelectedContentHost"
                        Margin="{TemplateBinding Padding}"
                        ContentSource="SelectedContent"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="TabStripPlacement" Value="Bottom">
                        <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="1"/>
                        <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0"/>
                        <Setter TargetName="RowDefinition0" Property="Height" Value="*"/>
                        <Setter TargetName="RowDefinition1" Property="Height" Value="Auto"/>
                        <Setter TargetName="HeaderPanel" Property="Margin" Value="2,0,2,2"/>
                    </Trigger>
                    <Trigger Property="TabStripPlacement" Value="Left">
                        <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0"/>
                        <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0"/>
                        <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="0"/>
                        <Setter TargetName="ContentPanel" Property="Grid.Column" Value="1"/>
                        <Setter TargetName="ColumnDefinition0" Property="Width" Value="Auto"/>
                        <Setter TargetName="ColumnDefinition1" Property="Width" Value="*"/>
                        <Setter TargetName="RowDefinition0" Property="Height" Value="*"/>
                        <Setter TargetName="RowDefinition1" Property="Height" Value="0"/>
                        <Setter TargetName="HeaderPanel" Property="Margin" Value="2,2,0,2"/>
                    </Trigger>
                    <Trigger Property="TabStripPlacement" Value="Right">
                        <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0"/>
                        <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0"/>
                        <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="1"/>
                        <Setter TargetName="ContentPanel" Property="Grid.Column" Value="0"/>
                        <Setter TargetName="ColumnDefinition0" Property="Width" Value="*"/>
                        <Setter TargetName="ColumnDefinition1" Property="Width" Value="Auto"/>
                        <Setter TargetName="RowDefinition0" Property="Height" Value="*"/>
                        <Setter TargetName="RowDefinition1" Property="Height" Value="0"/>
                        <Setter TargetName="HeaderPanel" Property="Margin" Value="0,2,2,2"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <Style TargetType="{x:Type TabItem}">
                <Setter Property="FocusVisualStyle">
                    <Setter.Value>
                        <Style>
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ControlLightColorKey}}"/>
                        <!-- <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                            <GradientStop Color="#FFF0F0F0" Offset="0"/>
                            <GradientStop Color="#FFE5E5E5" Offset="1"/>
                        </LinearGradientBrush> -->
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush" Value="#FFACACAC"/>
                <Setter Property="Margin" Value="0"/>
                <Setter Property="Padding" Value="6,2"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabItem}">
                            <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                                <Border x:Name="mainBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,0" Background="{TemplateBinding Background}" Margin="0">
                                    <Border x:Name="innerBorder" BorderBrush="#FFACACAC" BorderThickness="1,1,1,0" Background="White" Margin="-1" Opacity="0"/>
                                </Border>
                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" 
                                                  Content="{TemplateBinding Header}" 
                                                  ContentStringFormat="{TemplateBinding HeaderStringFormat}" 
                                                  ContentSource="Header" Focusable="False" 
                                                  HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}" 
                                                  Margin="{TemplateBinding Padding}" 
                                                  RecognizesAccessKey="True" 
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                  VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Top"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background" TargetName="mainBorder">
                                        <Setter.Value>
                                            <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ControlLightColorKey}}"/>
                                            <!-- <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                <GradientStop Color="#FFECF4FC" Offset="0"/>
                                                <GradientStop Color="#FFDCECFC" Offset="1"/>
                                            </LinearGradientBrush> -->
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="BorderBrush" TargetName="mainBorder" Value="#FF7EB4EA"/>
                                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Top"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                    <Setter Property="Background" TargetName="mainBorder" Value="#FFF0F0F0"/>
                                    <Setter Property="BorderBrush" TargetName="mainBorder" Value="#FFD9D9D9"/>
                                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Top"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Top"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Panel.ZIndex" Value="1"/>
                                    <Setter Property="Margin" Value="0"/>
                                    <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <TabControl x:Name="tab" Template="{StaticResource ResourceKey=tabtemplate}">
        <TabItem Header="设置">
            <tool:OptionPanel x:Name="pn_option"/>
        </TabItem>
        <TabItem Header="32"/>
    </TabControl>

</UserControl>
